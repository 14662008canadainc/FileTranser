security.require-ssl=true
server.ssl.key-store=nvxclouds.net.jks
server.ssl.key-store-password=password
server.ssl.key-alias=mytomcat
server.tomcat.max-threads = 500
server.port = 12443

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
spring.http.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=1024MB
spring.http.multipart.file-size-threshold=1024MB

# Max file size.
spring.servlet.multipart.max-file-size=1024MB
spring.http.multipart.max-file-size=1024MB

# Max Request Size
spring.servlet.multipart.max-request-size=1024MB
spring.http.multipart.max-request-size=1024MB
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads

# 2. MySQL
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/psi_db
spring.datasource.username=root
spring.datasource.password=Wentiliangkaihua@2021
spring.datasource.initialization-mode=always
#spring.datasource.data = classpath:data-mysql.sql

#The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
